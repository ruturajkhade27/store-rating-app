// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  STORE_OWNER
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(60)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  address   String   @db.VarChar(400)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ratings   Rating[]
  store     Store?

  @@map("users")
}

model Store {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(60)
  email     String   @unique @db.VarChar(255)
  address   String   @db.VarChar(400)
  ownerId   Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ratings   Rating[]

  @@map("stores")
}

model Rating {
  id       Int @id @default(autoincrement())
  rating   Int @db.TinyInt // 1-5
  userId   Int
  storeId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user     User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  store    Store @relation(fields: [storeId], references: [id], onDelete: Cascade)

  // Unique constraint - one rating per user per store
  @@unique([userId, storeId])
  @@map("ratings")
}